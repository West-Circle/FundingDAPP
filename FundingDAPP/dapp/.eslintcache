[{"C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\App.js":"1","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\index.js":"2","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\eth\\fundingCompanyInstance.js":"3","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\utils\\initWeb3.js":"4","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\DappCenter.js":"5","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\CreatorFunding.js":"6","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\InvestFunding.js":"7","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\AllFunding.js":"8","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\eth\\interact.js":"9","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\CardList.js":"10","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\CreateNewFunding.js":"11","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\Request.js":"12","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\Navbar.js":"13","C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\index.js":"14","C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\App.js":"15","C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\Navbar.js":"16","C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\eth\\fundingCompanyInstance.js":"17","C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\utils\\initWeb3.js":"18","C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\DappCenter.js":"19","C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\InvestFunding.js":"20","C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\CreatorFunding.js":"21","C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\AllFunding.js":"22","C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\CardList.js":"23","C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\Request.js":"24","C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\eth\\interact.js":"25","C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\CreateNewFunding.js":"26"},{"size":926,"mtime":1610529080938,"results":"27","hashOfConfig":"28"},{"size":240,"mtime":1610520844932,"results":"29","hashOfConfig":"28"},{"size":8282,"mtime":1610534087473,"results":"30","hashOfConfig":"28"},{"size":320,"mtime":1610515585846,"results":"31","hashOfConfig":"28"},{"size":602,"mtime":1610519874614,"results":"32","hashOfConfig":"28"},{"size":5139,"mtime":1610528600649,"results":"33","hashOfConfig":"28"},{"size":2644,"mtime":1610528624140,"results":"34","hashOfConfig":"28"},{"size":2755,"mtime":1610526823095,"results":"35","hashOfConfig":"28"},{"size":6347,"mtime":1610530334178,"results":"36","hashOfConfig":"28"},{"size":2427,"mtime":1610530458621,"results":"37","hashOfConfig":"28"},{"size":3433,"mtime":1610530415211,"results":"38","hashOfConfig":"28"},{"size":2508,"mtime":1610475660808,"results":"39","hashOfConfig":"28"},{"size":398,"mtime":1610520884976,"results":"40","hashOfConfig":"28"},{"size":240,"mtime":1610520844932,"results":"41","hashOfConfig":"42"},{"size":926,"mtime":1610529080938,"results":"43","hashOfConfig":"42"},{"size":398,"mtime":1610520884976,"results":"44","hashOfConfig":"42"},{"size":8282,"mtime":1610531385057,"results":"45","hashOfConfig":"42"},{"size":320,"mtime":1610515585846,"results":"46","hashOfConfig":"42"},{"size":602,"mtime":1610519874614,"results":"47","hashOfConfig":"42"},{"size":2644,"mtime":1610528624140,"results":"48","hashOfConfig":"42"},{"size":5139,"mtime":1610528600649,"results":"49","hashOfConfig":"42"},{"size":2755,"mtime":1610526823095,"results":"50","hashOfConfig":"42"},{"size":2427,"mtime":1610530458621,"results":"51","hashOfConfig":"42"},{"size":2508,"mtime":1610475660808,"results":"52","hashOfConfig":"42"},{"size":6347,"mtime":1610530334178,"results":"53","hashOfConfig":"42"},{"size":3433,"mtime":1610530415211,"results":"54","hashOfConfig":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},"xl6lsl",{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"57"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"57"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"57"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"57"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e12djj",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\App.js",[],["114","115"],"C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\index.js",[],"C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\eth\\fundingCompanyInstance.js",[],"C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\utils\\initWeb3.js",[],"C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\DappCenter.js",[],"C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\CreatorFunding.js",["116","117"],"//发起人页面\r\nimport React, {Component} from 'react';\r\nimport {getFundingDetails,createRequest,showRequests,finalizeRequest} from '../eth/interact';\r\nimport CardList from './CardList';\r\nimport CreateNewFunding from './CreateNewFunding';\r\nimport {Form,Label,Segment,Button} from 'semantic-ui-react';\r\nimport Request from './Request';\r\n\r\nclass CreatorFunding extends Component{\r\n    state = {\r\n        creatorFundingDetails : [],\r\n        selectedFundingDetail: '',\r\n        requestDesc: '', //description\r\n        requestBalance: '',\r\n        requestAddress: '',\r\n        requestsDetails: [],\r\n    }\r\n\r\n    async componentWillMount() {\r\n        let creatorFundingDetails = await getFundingDetails(2)\r\n        console.table(creatorFundingDetails)\r\n\r\n        this.setState({\r\n            creatorFundingDetails,\r\n        })\r\n    }\r\n\r\n    //CardList function \r\n    onCardClick = (selectedFundingDetail) => {\r\n        console.log('bbbbb',selectedFundingDetail)\r\n        this.setState({\r\n            selectedFundingDetail:selectedFundingDetail\r\n        })\r\n    }\r\n\r\n    //data changed then activate function\r\n    handleChange = (e, {name,value}) => this.setState({ [name]:value })\r\n    handleCreateRequest = async() => {\r\n        let {selectedFundingDetail,requestDesc,requestBalance,requestAddress} = this.state\r\n        console.log(requestDesc,requestBalance,requestAddress)\r\n        try{\r\n            await createRequest(selectedFundingDetail.fundingAddress,requestDesc,requestBalance,requestAddress)\r\n            alert('申请请求成功\\n')\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n    handleShowRequests = async () =>{\r\n        let fundingAddress = this.state.selectedFundingDetail.fundingAddress\r\n        try{\r\n            let requestsDetails = await showRequests(fundingAddress)\r\n            console.log('requestsDetails:',requestsDetails)\r\n            this.setState({\r\n                requestsDetails:requestsDetails\r\n            })\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n    handleFinalize = async (index) => {\r\n        console.log('终结请求',index)\r\n        try{\r\n            await finalizeRequest(this.state.selectedFundingDetail.fundingAddress,index)\r\n            alert('支付成功\\n')\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let{ creatorFundingDetails,selectedFundingDetail,requestDesc,requestBalance,requestAddress,requestsDetails } = this.state\r\n        return(\r\n            <div>\r\n                <CardList details={creatorFundingDetails} onCardClick={this.onCardClick} />\r\n                <h4></h4>\r\n                <CreateNewFunding />\r\n                {\r\n                    <div>\r\n                        <h1></h1>\r\n                        <h3>发起支付请求</h3>\r\n                        <Segment>\r\n                            <h4>当前众筹项目 : {selectedFundingDetail.projectName}</h4>\r\n                            <h4>地址 : {selectedFundingDetail.fundingAddress}</h4>\r\n                            <Form onSubmit={this.handleCreateRequest}>\r\n                                <Form.Input type = 'text' name='requestDesc' required value={requestDesc}\r\n                                        label='请求描述' placeholder='请求描述' onChange={this.handleChange} />\r\n\r\n                                <Form.Input type = 'text' name='requestBalance' required value={requestBalance}\r\n                                        label='支付金额' labelPosition='left' placeholder='支付金额' onChange={this.handleChange}>\r\n                                    <Label basic>￥</Label>\r\n                                    <input />\r\n                                </Form.Input>\r\n                                \r\n                                <Form.Input type = 'text' name='requestAddress' required value={requestAddress}\r\n                                        label='商家收款地址' labelPosition='left' placeholder='商家收款地址' onChange={this.handleChange}>\r\n                                    <Label basic><span role='img' aria-label='location'>📍</span></Label>\r\n                                    <input />\r\n                                </Form.Input>\r\n                                <Form.Button primary content='申请请求' />\r\n\r\n                            </Form>\r\n                        </Segment>\r\n                    </div>\r\n                }\r\n\r\n                {\r\n                    selectedFundingDetail && (\r\n                        <div>\r\n                            <Button onClick={this.handleShowRequests}>申请详情</Button>\r\n                            <Request \r\n                                requestsDetails = {requestsDetails}\r\n                                handleFinalize = {this.handleFinalize}\r\n                                pageKey={2}\r\n                                investorsCount = {selectedFundingDetail.investorsCount}\r\n                            />\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\nexport default CreatorFunding","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\InvestFunding.js",[],"C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\AllFunding.js",["118"],"//所有众筹项目页面\r\nimport React , {Component } from 'react';\r\nimport { getFundingDetails, handleInvestFunc } from '../eth/interact';\r\nimport CardList from './CardList';\r\nimport { Dimmer , Form , Label , Loader , Segment } from 'semantic-ui-react';\r\n\r\nclass AllFunding extends Component{\r\n    state = {\r\n        active : false,\r\n        allFundingDetails : [],\r\n        selectedFundingDetail : '',\r\n    }\r\n\r\n    async componentWillMount(){\r\n        let allFundingDetails = await getFundingDetails(1)\r\n        console.table(allFundingDetails)\r\n\r\n        this.setState({\r\n            allFundingDetails,\r\n        })\r\n    }\r\n\r\n    //返回一个回调函数给CardList\r\n    onCardClick = (selectedFundingDetail) => {\r\n        console.log('aaaaa : ',selectedFundingDetail)\r\n        this.setState({\r\n            selectedFundingDetail:selectedFundingDetail\r\n        })\r\n    }\r\n\r\n    handleInvest = async() => {\r\n        this.setState({active:true})\r\n        let{fundingAddress, investBalance} = this.state.selectedFundingDetail\r\n        //send a clicked contract address\r\n        try{\r\n            await handleInvestFunc(fundingAddress, investBalance)\r\n            alert('参与众筹项目成功\\n')\r\n            this.setState({active:false})\r\n        }catch(error){\r\n            console.log(error)\r\n            this.setState({active:false})\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let {fundingAddress, projectName, investBalance} = this.state.selectedFundingDetail\r\n        return(\r\n            <div>\r\n                <h3>所有的众筹项目</h3>\r\n                <CardList details={this.state.allFundingDetails} onCardClick={this.onCardClick}/>\r\n                <div>\r\n                    <h1></h1>\r\n                    <Dimmer.Dimmable as = {Segment} dimmed={this.state.active}>\r\n                        <Dimmer active={this.state.active} inverted>\r\n                            <Loader>参与众筹</Loader>\r\n                        </Dimmer>\r\n                        <Form onSubmit={this.handleInvest}>\r\n                            <Form.Input type = 'text' value={projectName || ''} label='项目名称 : '/>\r\n                            <Form.Input type = 'text' value={fundingAddress || ''} label='项目地址 : '/>\r\n                            <Form.Input type = 'text' value={investBalance || ''} label='固定投资金额 : ' labelPosition='left'>\r\n                                <Label basic>￥</Label>\r\n                                <input />\r\n                            </Form.Input>\r\n                            <Form.Button primary content = '参与众筹' />\r\n                        </Form>\r\n                    </Dimmer.Dimmable>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AllFunding","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\eth\\interact.js",[],"C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\CardList.js",["119","120","121","122","123"],"//显示项目的图\r\nimport React from 'react';\r\nimport { Card , Image , List , Progress } from 'semantic-ui-react';\r\n\r\nconst src = '/public/images/whiteframe.png'\r\n\r\nconst CardList = (props) => {\r\n    let details = props.details\r\n    let onCardClick = props.onCardClick\r\n\r\n    let cards = details.map(detail => {\r\n        return <CardFunding key = {detail.fundingAddress} detail={detail} onCardClick={onCardClick}/>\r\n\r\n    })\r\n\r\n    return (\r\n        <Card.Group itemsPerRow={4}>\r\n            {cards}\r\n        </Card.Group>\r\n    )\r\n\r\n}\r\n\r\nconst CardFunding = (props) => {\r\n    let detail = props.detail\r\n    let {fundingAddress,manager,projectName,investBalance,targetBalance,projectDescrip,deadline,balance,investorsCount} = detail\r\n    let percent = parseFloat(balance) / parseFloat(targetBalance) * 100\r\n    \r\n    let onCardClick = props.onCardClick\r\n\r\n    return(\r\n        <Card onClick={() => {\r\n            return onCardClick && onCardClick(detail)\r\n        }}>\r\n            <Image src = '/images/ethereum.jpg' wrapped ui={false}/>\r\n            <Card.Content>\r\n                <Card.Header>{projectName}</Card.Header>\r\n                <Card.Meta>\r\n                    <span className='date'>截止时间 ：{deadline} （根据上方链接自行转换时间）</span>\r\n                </Card.Meta>\r\n                <Card.Description>概述：{projectDescrip}</Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n                <List horizontal style={{display:'flex', justifyContent:'space-around'}}>\r\n                    <List.Item>\r\n                        <List.Content>\r\n                            <List.Header>已筹得</List.Header>\r\n                            {balance}wei\r\n                        </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <List.Content>\r\n                            <List.Header>已达</List.Header>\r\n                            {percent}%\r\n                        </List.Content>\r\n                    </List.Item>\r\n                    <List.Item>\r\n                        <List.Content>\r\n                            <List.Header>已参与人数</List.Header>\r\n                            {investorsCount}人\r\n                        </List.Content>\r\n                    </List.Item>\r\n                </List>\r\n            </Card.Content>\r\n        </Card>\r\n    )\r\n\r\n}\r\n\r\nexport default CardList\r\n","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\CreateNewFunding.js",["124"],"//创建众筹项目页面\r\nimport React,{Component} from 'react';\r\nimport {Dimmer,Form,Label,Loader,Segment} from 'semantic-ui-react';\r\nimport {createFunding} from '../eth/interact';\r\n\r\nclass CreateNewFunding extends Component{\r\n    state = {\r\n        active : false,\r\n        projectName: '',\r\n        investMoney: '',\r\n        targetMoney: '',\r\n        projectDescrip: '',\r\n        duration: '',\r\n    }\r\n    //when data changed then touch below function\r\n    handleChange = (e,{name,value}) => this.setState({[name]:value})\r\n\r\n    handleCreate = async() => {\r\n        let{projectName,investMoney,targetMoney,projectDescrip,duration} = this.state\r\n        console.log('investMoney:',investMoney)\r\n        console.log('targetMoney:',targetMoney)\r\n        this.setState({active:true})\r\n\r\n        try{\r\n            await createFunding(projectName,investMoney,targetMoney,projectDescrip,duration)\r\n            alert('创建新的众筹项目成功\\n')\r\n            this.setState({active:false})\r\n\r\n        }catch(error){\r\n            this.setState({active:false})\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    render(){\r\n        let {active,projectName,investMoney,targetMoney,projectDescrip,duration} = this.state\r\n\r\n        return(\r\n            <div>\r\n                <h4></h4>\r\n                <Dimmer.Dimmable as={Segment} dimmed={active}>\r\n                    <Dimmer active={active} inverted>\r\n                        <Loader>Loading...</Loader>\r\n                    </Dimmer>\r\n                    <Form onSubmit={this.handleCreate}>\r\n                        <Form.Input required type = 'text' placeholder='项目名称' name='projectName'\r\n                                value={projectName} label='项目名称 :' onChange={this.handleChange}/>\r\n                        \r\n                        <Form.Input required type = 'text' placeholder='投资金额' name='investMoney'\r\n                                value={investMoney} label='固定投资金额 :' labelPosition='left' onChange={this.handleChange}>\r\n                            <Label basic>￥</Label>\r\n                            <input/>\r\n                        </Form.Input>\r\n\r\n                        <Form.Input required type = 'text' placeholder='目标金额' name='targetMoney'\r\n                                value={targetMoney} label='目标金额 :' labelPosition='left' onChange={this.handleChange}>\r\n                            <Label basic>￥</Label>\r\n                            <input/>\r\n                        </Form.Input>\r\n\r\n                        <Form.Input required type = 'text' placeholder='项目概述' name='projectDescrip'\r\n                                value={projectDescrip} label='项目概述 :' labelPosition='left' onChange={this.handleChange}>\r\n                            \r\n                        </Form.Input>\r\n\r\n                        <Form.Input required type = 'text' placeholder='请输入秒数 eg : 10000' name='duration'\r\n                                value={duration} label='众筹所需时间（秒） :' labelPosition='left' onChange={this.handleChange}>\r\n                            <Label basic>￥</Label>\r\n                            <input/>\r\n                        </Form.Input>\r\n                        <Form.Button primary content='创建'/> \r\n\r\n                    </Form>\r\n                </Dimmer.Dimmable>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CreateNewFunding",["125","126"],"C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\display\\Request.js",["127"],"import React from 'react';\r\nimport { Table ,Button } from 'semantic-ui-react';\r\n\r\nconst Request = (props) => {\r\n    let {requestsDetails,handleApprove,pageKey,handleFinalize,investorsCount} = props\r\n\r\n    //rows of requests\r\n    let rowContainer = requestsDetails.map((requestsDetails,i) => {\r\n        return <RowInfo \r\n            key = {i}\r\n            requestsDetail={requestsDetails}\r\n            handleApprove = {handleApprove}\r\n            index = {i}\r\n            pageKey = {pageKey}\r\n            handleFinalize = {handleFinalize}\r\n            investorsCount = {investorsCount}\r\n            />\r\n    })\r\n\r\n    return(\r\n        <Table celled>\r\n            <Table.Header>\r\n                <Table.Row>\r\n                    <Table.HeaderCell>请求描述</Table.HeaderCell>\r\n                    <Table.HeaderCell>支付金额</Table.HeaderCell>\r\n                    <Table.HeaderCell>商家地址</Table.HeaderCell>\r\n                    <Table.HeaderCell>当前同意人数</Table.HeaderCell>\r\n                    <Table.HeaderCell>当前状态</Table.HeaderCell>\r\n                    <Table.HeaderCell>操作</Table.HeaderCell>\r\n                </Table.Row>\r\n            </Table.Header>\r\n            <Table.Body>\r\n                {\r\n                    rowContainer\r\n                }\r\n            </Table.Body>\r\n        </Table>\r\n    )\r\n}\r\n\r\nlet RowInfo = (props) => {\r\n    let {requestsDetail,handleApprove,index,pageKey,handleFinalize,investorsCount} = props\r\n    //struct of Request\r\n    let{0:purpose,1:cost,2:shopAddress,3:isVoted,4:voteCount,5:status} = requestsDetail\r\n    let statusInfo = ''\r\n\r\n    if(status === '0'){\r\n        statusInfo = 'Voting'\r\n    }else if(status === '1'){\r\n        statusInfo = 'Approved'\r\n    }else if(status === '2'){\r\n        statusInfo = 'Completed'\r\n    }\r\n    return (\r\n        <Table.Row>\r\n            <Table.Cell>{purpose}</Table.Cell>\r\n            <Table.Cell>{cost}</Table.Cell>\r\n            <Table.Cell>{shopAddress}</Table.Cell>\r\n            <Table.Cell>{voteCount}/{investorsCount}</Table.Cell>\r\n            <Table.Cell>{statusInfo}</Table.Cell>\r\n            <Table.Cell>\r\n                {\r\n                    (pageKey === 2) ? (\r\n                        <Button onClick={() => handleFinalize(index)}>支付</Button>\r\n                    ) : (\r\n                        <Button onClick={() => handleApprove(index)}>批准</Button>\r\n                    )\r\n                }\r\n            </Table.Cell>\r\n        </Table.Row>\r\n    )\r\n}\r\n\r\nexport default Request","C:\\Users\\ASUS\\Desktop\\Coding\\VSWorkSpace\\fundingdapp\\dapp\\src\\Navbar.js",[],"C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\index.js",[],"C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\App.js",[],"C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\Navbar.js",[],"C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\eth\\fundingCompanyInstance.js",[],"C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\utils\\initWeb3.js",[],"C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\DappCenter.js",[],"C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\InvestFunding.js",[],"C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\CreatorFunding.js",["128","129"],"C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\AllFunding.js",["130"],"C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\CardList.js",["131","132","133","134","135"],"C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\Request.js",["136"],"C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\eth\\interact.js",[],"C:\\Users\\ASUS\\Desktop\\coding\\vsworkspace\\fundingdapp\\dapp\\src\\display\\CreateNewFunding.js",["137"],{"ruleId":"138","replacedBy":"139"},{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","severity":1,"message":"143","line":75,"column":17,"nodeType":"144","endLine":75,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":79,"column":25,"nodeType":"144","endLine":79,"endColumn":29},{"ruleId":"142","severity":1,"message":"143","line":52,"column":21,"nodeType":"144","endLine":52,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":3,"column":32,"nodeType":"147","messageId":"148","endLine":3,"endColumn":40},{"ruleId":"145","severity":1,"message":"149","line":5,"column":7,"nodeType":"147","messageId":"148","endLine":5,"endColumn":10},{"ruleId":"145","severity":1,"message":"150","line":26,"column":10,"nodeType":"147","messageId":"148","endLine":26,"endColumn":24},{"ruleId":"145","severity":1,"message":"151","line":26,"column":25,"nodeType":"147","messageId":"148","endLine":26,"endColumn":32},{"ruleId":"145","severity":1,"message":"152","line":26,"column":45,"nodeType":"147","messageId":"148","endLine":26,"endColumn":58},{"ruleId":"142","severity":1,"message":"143","line":40,"column":17,"nodeType":"144","endLine":40,"endColumn":21},{"ruleId":"138","replacedBy":"153"},{"ruleId":"140","replacedBy":"154"},{"ruleId":"145","severity":1,"message":"155","line":44,"column":42,"nodeType":"147","messageId":"148","endLine":44,"endColumn":49},{"ruleId":"142","severity":1,"message":"143","line":75,"column":17,"nodeType":"144","endLine":75,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":79,"column":25,"nodeType":"144","endLine":79,"endColumn":29},{"ruleId":"142","severity":1,"message":"143","line":52,"column":21,"nodeType":"144","endLine":52,"endColumn":25},{"ruleId":"145","severity":1,"message":"146","line":3,"column":32,"nodeType":"147","messageId":"148","endLine":3,"endColumn":40},{"ruleId":"145","severity":1,"message":"149","line":5,"column":7,"nodeType":"147","messageId":"148","endLine":5,"endColumn":10},{"ruleId":"145","severity":1,"message":"150","line":26,"column":10,"nodeType":"147","messageId":"148","endLine":26,"endColumn":24},{"ruleId":"145","severity":1,"message":"151","line":26,"column":25,"nodeType":"147","messageId":"148","endLine":26,"endColumn":32},{"ruleId":"145","severity":1,"message":"152","line":26,"column":45,"nodeType":"147","messageId":"148","endLine":26,"endColumn":58},{"ruleId":"145","severity":1,"message":"155","line":44,"column":42,"nodeType":"147","messageId":"148","endLine":44,"endColumn":49},{"ruleId":"142","severity":1,"message":"143","line":40,"column":17,"nodeType":"144","endLine":40,"endColumn":21},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-unused-vars","'Progress' is defined but never used.","Identifier","unusedVar","'src' is assigned a value but never used.","'fundingAddress' is assigned a value but never used.","'manager' is assigned a value but never used.","'investBalance' is assigned a value but never used.",["156"],["157"],"'isVoted' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]